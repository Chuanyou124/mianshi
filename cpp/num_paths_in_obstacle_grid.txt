class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (obstacleGrid.size() == 0)
        {
            return 0;
        }
        int x = obstacleGrid.size();
        int y = obstacleGrid[0].size();
        int m[x][y];
        for (int i = 0; i < x; ++i)
        {
            for (int j = 0; j < y; ++j)
            {
                if (obstacleGrid[x-i-1][y-j-1] == 1)
                {
                    m[i][j] = 0;
                }
                else if (i == 0 && j == 0)
                {
                    m[i][j] = 1;
                }
                else if (i == 0)
                {
                    m[i][j] = m[i][j-1];
                }
                else if (j == 0)
                {
                    m[i][j] = m[i-1][j];
                }
                else
                {
                    m[i][j] = m[i-1][j] + m[i][j-1];
                }
            }
        }
        return m[x-1][y-1];
    }
};